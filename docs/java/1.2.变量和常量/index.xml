<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1.2.变量和常量 on 坚持:多读书</title>
    <link>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/</link>
    <description>Recent content in 1.2.变量和常量 on 坚持:多读书</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1.2.1 关键字</title>
      <link>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.1.%E5%85%B3%E9%94%AE%E5%AD%97/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.1.%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
      <description>1.2.1 关键字 Java 中常用关键字：
 Java 关键字是区分大小写的哦！所以 void 是关键字，但 Void 就不是了~~</description>
    </item>
    
    <item>
      <title>1.2.2 标识符</title>
      <link>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.2.%E6%A0%87%E8%AF%86%E7%AC%A6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.2.%E6%A0%87%E8%AF%86%E7%AC%A6/</guid>
      <description>1.2.2 标识符 标识符就是用于给 Java 程序中变量、类、方法等命名的符号
 使用标识符时，需要遵守几条规则：
  标识符可以由字母、数字、下划线（_）、美元符（$）组成，但不能包含 @、%、空格等其它特殊字符，不能以数字开头。譬如：123name 就是不合法滴
  标识符不能是 Java 关键字和保留字（ Java 预留的关键字，以后的升级版本中有可能作为关键字），但可以包含关键字和保留字。如：不可以使用 void 作为标识符，但是 Myvoid 可以
  标识符是严格区分大小写的。 所以涅，一定要分清楚 imooc 和 IMooc 是两个不同的标识符哦！
  标识符的命名最好能反映出其作用，做到见名知意。
  </description>
    </item>
    
    <item>
      <title>1.2.3 变量</title>
      <link>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.3.%E5%8F%98%E9%87%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.3.%E5%8F%98%E9%87%8F/</guid>
      <description>1.2.3 变量 通过三个元素描述变量：变量类型、变量名以及变量值。
 变量使用规则
 1、Java 中的变量需要先声明后使用 2、变量使用时，可以声明变量的同时进行初始化, 也可以先声明后赋值 3、变量中每次只能赋一个值，但可以修改多次 4、main 方法中定义的变量必须先赋值，然后才能输出 5、虽然语法中没有提示错误，但在实际开发中，变量名不建议使用中文，容易产生安全隐患，譬如后期跨平台操作时出现乱码等等  </description>
    </item>
    
    <item>
      <title>1.2.4 数据类型</title>
      <link>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.4.%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.4.%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>1.2.4 数据类型 Java 语言是一种强类型语言。
  基本数据类型变量存的是数据本身 引用类型变量存的是保存数据的空间地址  说白了，基本数据类型变量里存储的是直接放在抽屉里的东西，而引用数据类型变量里存储的是这个抽屉的钥匙，钥匙和抽屉一一对应。
常用的基本数据类型有：  你可能已经注意到了：   String 是一种常见的引用数据类型，用来表示字符串。  自动类型转换 int score1=82; double score2=score1 System.out.println(score2) 运行结果: 82.0
自动类型转换需要满足的条件:
   目标类型能与源类型兼容，如 double 型兼容 int 型，但是 char 型不能兼容 int 型    目标类型大于源类型，如 double 类型长度为 8 字节， int 类型为 4 字节，因此 double 类型的变量里直接可以存放 int 类型的数据，但反过来就不可以了    强制类型转换 语法：( 数据类型 ) 数值
double avg1 = 75.8 int avg2=(int)avg1 强制类型转换可能会造成数据的丢失哦</description>
    </item>
    
    <item>
      <title>1.2.5 常量</title>
      <link>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.5.%E5%B8%B8%E9%87%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.5.%E5%B8%B8%E9%87%8F/</guid>
      <description>1.2.5 常量 语法：final 常量名 = 值;
 常量名一般使用大写字符</description>
    </item>
    
    <item>
      <title>1.2.6 注释</title>
      <link>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.6.%E6%B3%A8%E9%87%8A/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ruichengm1987.github.io/docs/java/1.2.%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/1.2.6.%E6%B3%A8%E9%87%8A/</guid>
      <description>1.2.6 注释 注释有三种类型：单行注释、多行注释、文档
 PS：使用文档注释时还可以使用 javadoc 标记，生成更详细的文档信息：
 @author 标明开发该类模块的作者 @version 标明该类模块的版本 @see 参考转向，也就是相关主题 @param 对方法中某参数的说明 @return 对方法返回值的说明 @exception 对方法可能抛出的异常进行说明  </description>
    </item>
    
  </channel>
</rss>