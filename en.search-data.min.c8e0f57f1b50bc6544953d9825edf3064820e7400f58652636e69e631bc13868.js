'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/english/%E8%AF%8D%E7%B1%BB/','title':"词类",'content':"词类  名词\n表人、事物、地点、或抽象概念的名称. 代词\n用来代替名词 形容词\n表人或事物的性质或特征 数词\n表数目或顺序 动词\n表动作或状态 副词\n修饰动词、形容词或副词\n说明时间，地点，程度等 冠词\n用在名词前,帮助说明名词 介词\n表示它后面的名词或代词与其他句子成分的关系  todo:: 看到1.20:49 "});index.add({'id':1,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E6%A0%87%E8%AF%86%E7%AC%A6/','title':"标识符",'content':"标识符 1、预声明标识符 1.1 关键字(25个)  关键字(25个)  1.2 其他预声明标识符(40个)  类型标识符(20个) 常量值标识符(4个) 空白标识符(1个) 内置函数(15个)  2、用户自定义标识符 包名 变量名 常量名 函数名 自定义类型名 方法名  3、操作符和分隔符  操作符和分隔符(47个)  "});index.add({'id':2,'href':'/docs/go/%E5%AE%89%E8%A3%85%E7%AF%87/','title':"安装篇",'content':"安装篇  安装 Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':3,'href':'/docs/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/','title':"常用命令",'content':"常用命令  命令基本格式 文件处理命令 文件搜索命令 帮助命令 压缩与解压缩命令 关机和重启命令 其他常用命令  "});index.add({'id':4,'href':'/docs/c++/','title':"C++",'content':"C++ Let\u0026rsquo;s Go, Go Go Go!!!\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':5,'href':'/docs/english/','title':"Englinsh",'content':"英语语法 Let\u0026rsquo;s Go, Go Go Go!!!\n 词类 句子成分 构词法  "});index.add({'id':6,'href':'/docs/example/','title':"Example Site",'content':"Introduction Ferre hinnitibus erat accipitrem dixi Troiae tollens Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\n Pedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret  Est simul fameque tauri qua ad Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo;  Trepident sitimque Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"});index.add({'id':7,'href':'/docs/go/','title':"GoLang",'content':"Collapsed Level of Menu Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':8,'href':'/docs/shell/shell%E5%9F%BA%E7%A1%80/','title':"shell基础",'content':"shell基础 shell是命令行解析器 关系: 内存-\u0026gt; shell -\u0026gt; 用户  shell概述 脚本执行方法 Bash的基本功能 "});index.add({'id':9,'href':'/docs/example/table-of-contents/with-toc/','title':"With ToC",'content':"Caput vino delphine in tamen vias Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  Natus quaerere Pectora et sine mulcere, coniuge dum tincta incurvae. Quis iam; est dextra Peneosque, metuis a verba, primo. Illa sed colloque suis: magno: gramen, aera excutiunt concipit.\n Phrygiae petendo suisque extimuit, super, pars quod audet! Turba negarem. Fuerat attonitus; et dextra retinet sidera ulnas undas instimulat vacuae generis? Agnus dabat et ignotis dextera, sic tibi pacis feriente at mora euhoeque comites hostem vestras Phineus. Vultuque sanguine dominoque metuit risi fama vergit summaque meus clarissimus artesque tinguebat successor nominis cervice caelicolae.\n Limitibus misere sit Aurea non fata repertis praerupit feruntur simul, meae hosti lentaque citius levibus, cum sede dixit, Phaethon texta. Albentibus summos multifidasque iungitur loquendi an pectore, mihi ursaque omnia adfata, aeno parvumque in animi perlucentes. Epytus agis ait vixque clamat ornum adversam spondet, quid sceptra ipsum est. Reseret nec; saeva suo passu debentia linguam terga et aures et cervix de ubera. Coercet gelidumque manus, doluit volvitur induta?\nEnim sua Iuvenilior filia inlustre templa quidem herbis permittat trahens huic. In cruribus proceres sole crescitque fata, quos quos; merui maris se non tamen in, mea.\nGermana aves pignus tecta Mortalia rudibusque caelum cognosceret tantum aquis redito felicior texit, nec, aris parvo acre. Me parum contulerant multi tenentem, gratissime suis; vultum tu occupat deficeret corpora, sonum. E Actaea inplevit Phinea concepit nomenque potest sanguine captam nulla et, in duxisses campis non; mercede. Dicere cur Leucothoen obitum?\nPostibus mittam est nubibus principium pluma, exsecratur facta et. Iunge Mnemonidas pallamque pars; vere restitit alis flumina quae quoque, est ignara infestus Pyrrha. Di ducis terris maculatum At sede praemia manes nullaque!\n"});index.add({'id':10,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E6%A0%87%E8%AF%86%E7%AC%A6/%E5%85%B3%E9%94%AE%E5%AD%9725%E4%B8%AA/','title':"关键字(25个)",'content':"关键字(25个) 引导程序整体结构的8个关键字  package // 定义包名的关键字 import //导入包名关键字 const //常量声明关键字 var //变量声明关键字 func //函数定义关键字 defer //延迟执行关键字 go //并发语法糖关键字 return //函数返回关键字  声明复合数据结构的4个关键字  struct //定义结构类型关键字 interface //定义接口类型关键字 map //声明或创建map类型关键字 chan //声明或创建通道类型关键字  控制程序结构的13个关键宇  if else //if else语句关键字 for range break continue //for循环使用的关键字 switch select type case default fallthrough //switch和select语句使用的关键字 goto //goto跳转语句关键字  "});index.add({'id':11,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E5%8F%98%E9%87%8F%E5%B8%B8%E9%87%8F/','title':"变量\u0026常量",'content':"变量\u0026amp;常量 变量 1、显式的完整声明 var varName dataType [ = value] 说明: 关键字var用于变量声明 varName 是变量名称标识符 dataType 数据类型 value 初始化值 例子: var a int = 1 2、短类型声明 varName := value := 声明只能出现在函数内（包括在方法内） 此时Go编译器自动进行数据类型推断 a, b := 1, \u0026quot;hello\u0026quot;  常量 const a = 1 const ( a = iota ) "});index.add({'id':12,'href':'/docs/english/%E8%AF%8D%E7%B1%BB/%E5%90%8D%E8%AF%8D/','title':"名词",'content':"名词 "});index.add({'id':13,'href':'/docs/datas_tructure/%E5%A4%8D%E6%9D%82%E5%BA%A6/','title':"复杂度",'content':"复杂度 复杂度是衡量代码运行效率的重要的度量因素，复杂度通常包括时间复杂度和空间复杂度\n复杂度特性:  复杂度与具体的常系数无关 多项式级的复杂度相加的时候，选择高者作为结果 O(1) 也是表示一个特殊复杂度, 与输入数据量n无关  复杂度的经验结论  一个顺序结构的代码，时间复杂度是O(1) 二分查找，或者更通用地说是采用分而治之的二分策略，时间复杂度是O(logn). 一个简单的for循环，时间复杂度是O(n) 两个顺序执行的for循环,时间复杂度是O(n)+O(n)=O(2n),其实也是O(n) 两个嵌套的for循环, 时间复杂度是O(n2)  总结 时间复杂度与\u0026laquo;代码的结构设计\u0026raquo;高度相关\n空间复杂度与\u0026laquo;数据结构的选择\u0026raquo;高度相关\n"});index.add({'id':14,'href':'/docs/go/%E5%AE%89%E8%A3%85%E7%AF%87/%E5%AE%89%E8%A3%85/','title':"安装",'content':"安装 linux 下安装  wget https://dl.google.com/go/go1.x.x.linux-amd64.tar.gz 下载安装包 tar -C /usr/local -zxvf go1.x.x.linux-amd64.tar.gz 添加/usr/loacl/go/bin目录到PATH变量中。添加到/etc/profile 或$HOME/.profile都可以  vim /etc/profile export GOROOT=/usr/local/go #设置为go安装的路径,有些安装包会自动设置默认的goroot export GOPATH=/usr/local/goprojects/ #GO项目路径多个用\u0026rsquo;,\u0026lsquo;分开 export PATH=$PATH:$GOROOT/bin:$GOPATH/bin #加载 source /etc/profile   执行go version，如果现实版本号，则Go环境安装成功.  "});index.add({'id':15,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/','title':"基础篇",'content':"Collapsed Level of Menu Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n 程序基础 Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':16,'href':'/docs/python/','title':"Python",'content':"Collapsed Level of Menu Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':17,'href':'/docs/shell/bash%E5%8F%98%E9%87%8F/','title':"Bash变量",'content':"shell基础 Buttons are styled links that can lead to local page or external link.\nExample {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}}  Get Home  Contribute  "});index.add({'id':18,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/iota/','title':"iota",'content':"iota   const (\na = 1 \u0026laquo; iota // a==1 (iota == 0)\nb = 1 \u0026laquo; iota // b==2 （iota == 1）\nc = 3 // c == 3 (iota==2, unused)\nd = 1 \u0026laquo; iota // d==8 (iota == 3) )\n  const x = iota // x==0\n  const y = iota // y==0 分开的const语句,iota每次都从0开始\n  "});index.add({'id':19,'href':'/docs/example/table-of-contents/without-toc/','title':"Without ToC",'content':"At me ipso nepotibus nunc celebratior genus Tanto oblite Lorem markdownum pectora novis patenti igne sua opus aurae feras materiaque illic demersit imago et aristas questaque posset. Vomit quoque suo inhaesuro clara. Esse cumque, per referri triste. Ut exponit solisque communis in tendens vincetis agisque iamque huic bene ante vetat omina Thebae rates. Aeacus servat admonitu concidit, ad resimas vultus et rugas vultu dignamque Siphnon.\nQuam iugulum regia simulacra, plus meruit humo pecorumque haesit, ab discedunt dixit: ritu pharetramque. Exul Laurenti orantem modo, per densum missisque labor manibus non colla unum, obiectat. Tu pervia collo, fessus quae Cretenque Myconon crate! Tegumenque quae invisi sudore per vocari quaque plus ventis fluidos. Nodo perque, fugisse pectora sorores.\nSumme promissa supple vadit lenius Quibus largis latebris aethera versato est, ait sentiat faciemque. Aequata alis nec Caeneus exululat inclite corpus est, ire tibi ostendens et tibi. Rigent et vires dique possent lumina; eadem dixit poma funeribus paret et felix reddebant ventis utile lignum.\n Remansit notam Stygia feroxque Et dabit materna Vipereas Phrygiaeque umbram sollicito cruore conlucere suus Quarum Elis corniger Nec ieiunia dixit  Vertitur mos ortu ramosam contudit dumque; placabat ac lumen. Coniunx Amoris spatium poenamque cavernis Thebae Pleiadasque ponunt, rapiare cum quae parum nimium rima.\nQuidem resupinus inducto solebat una facinus quae Credulitas iniqua praepetibus paruit prospexit, voce poena, sub rupit sinuatur, quin suum ventorumque arcadiae priori. Soporiferam erat formamque, fecit, invergens, nymphae mutat fessas ait finge.\n Baculum mandataque ne addere capiti violentior Altera duas quam hoc ille tenues inquit Sicula sidereus latrantis domoque ratae polluit comites Possit oro clausura namque se nunc iuvenisque Faciem posuit Quodque cum ponunt novercae nata vestrae aratra  Ite extrema Phrygiis, patre dentibus, tonso perculit, enim blanda, manibus fide quos caput armis, posse! Nocendo fas Alcyonae lacertis structa ferarum manus fulmen dubius, saxa caelum effuge extremis fixum tumor adfecit bella, potentes? Dum nec insidiosa tempora tegit spirarunt. Per lupi pars foliis, porreximus humum negant sunt subposuere Sidone steterant auro. Memoraverit sine: ferrum idem Orion caelum heres gerebat fixis?\n"});index.add({'id':20,'href':'/docs/go/%E5%AE%89%E8%A3%85%E7%AF%87/%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE/','title':"国内镜像配置",'content':"国内镜像配置 Go 1.13及以上(推荐) 打开你的终端并执行: go env -w GOPROXY=https://goproxy.cn,direct  Go module 打开你的终端并执行: go env -w GO111MODULE=on  go imports go imports包的引入可以让代码书写变得更加快捷 $ go get -v golang.org/x/tools/cmd/goimports  "});index.add({'id':21,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E5%B9%B6%E8%A1%8C%E5%B9%B6%E5%8F%91%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97/','title':"并行、并发与分布式计算",'content':"ddd\n"});index.add({'id':22,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E6%A0%87%E8%AF%86%E7%AC%A6/%E7%B1%BB%E5%9E%8B%E6%A0%87%E8%AF%86%E7%AC%A620%E4%B8%AA/','title':"类型标识符(20个)",'content':"类型标识符(20个) 数值（16个） 整型（12个） byte\nint\nint8 int16 int32 int64\nuint unint8 uint16 uint32 uint64\nuintprt\n浮点型（2个） float32\nfloat64\n复数型（2个） complex64\ncomplex128\n字符和字符串型（ 2 个） string rune\n接口型（1个） error\n布尔型（1个） bool\n"});index.add({'id':23,'href':'/docs/datas_tructure/','title':"Datas Tructure",'content':"Collapsed Level of Menu Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':24,'href':'/docs/go/%E8%BF%90%E8%A1%8C%E6%97%B6%E7%AF%87/','title':"运行时篇",'content':"Collapsed Level of Menu Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':25,'href':'/docs/shell/shell%E8%BF%90%E7%AE%97%E7%AC%A6/','title':"shell运算符",'content':"shell基础 Buttons are styled links that can lead to local page or external link.\nExample {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}}  Get Home  Contribute  "});index.add({'id':26,'href':'/docs/go/%E5%AE%89%E8%A3%85%E7%AF%87/%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/','title':"依赖管理",'content':"依赖管理 依赖管理的三个阶段: GOPATH, GOVENDOR, go mod\nGOPATH 默认在~/go\ngo mod的使用 使用intelij Idea创建项目  打开Intelij Idea, File-\u0026gt;new-\u0026gt;project 选择Go MOdules(vgo), 将Proxy: 改为https://goproxy.cn,direct 打开ide的terminal输入go env查看GO111MODULE是否为on，和查看GOPROXY是否为: https://goproxy.cn,direct 继续在terminal输入: go get -u go.uber.org/zap  获取某个固定版本: go get -u go.uber.org/zap@1.11\n获取最新的版本: go get -u go.uber.org/zap\n清洁: go mod tidy\n增加依赖：\n1. go get\n2. 代码直接写, 点run的时候自动下载\ngo build ./...  迁移到go mod go mod init modtest2 go build ./... 增加依赖 go get  总结  由go命令统一的管理, 用户不必关心目录结构 初始化: go mode init [名称] 增加依赖: go get 或者 直接写代码,在build的时候把依赖加进去 更新依赖: go get [@v\u0026hellip;], go mod tidy # 不加@v表示拿最新版本 将旧项目迁移到go mod: go mod init, go build ./\u0026hellip;, 删掉vendor，glide.yaml等文件  目录的整理 把每一个包含main的文件，分别放在不同的目录里\ngo build ./\u0026hellip; #编译当前和所有下级目录中的main方法，不产生编译文件 go install ./\u0026hellip; # 产生编译文件， 在GOPATH的bin目录中\n"});index.add({'id':27,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E6%A0%87%E8%AF%86%E7%AC%A6/%E5%B8%B8%E9%87%8F%E5%80%BC%E6%A0%87%E8%AF%86%E7%AC%A64%E4%B8%AA/','title':"常量值标识符(4个)",'content':"常量值标识符(4个) true false //true 和 false 表示 bool 类型的两常量值 iota //用在连续的枚举类型的声明中 nil //指针／引用型的变量的默认值就是 nil\n"});index.add({'id':28,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/','title':"数据类型",'content':"#数据类型\n一、基本数据类型 Go 语言内置七类基本数据类型\n1.布尔类型  True False //不初始化默认为false  2.整型 byte int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 uintptr  3.浮点型 float32 float64  4.复数 complex64 complex128 // real返回复数的实部, image返回复数的虚部  5.字符 rune //rune是uint类型的别名  6.字符串: string 赋值: a := \u0026quot;hello\u0026quot; a := \u0026quot;hello world\u0026quot; b := []byte(a) c := []rune(a) b和c的结果都是:[104 101 108 108 111 44 32 119 111 114 108 100]  7.错误类型: error 8.注意 Go内置两种字符类型: 一种是byte的字节类类型(byte是unit的别名), 另一种是表示unicode编码的字符rune. rune在go内部是int32类型的别名,占用4个字节.  二、复合数据类型 复合数据类型就是由其他类型组合而成的类型.\n1.指针 *pointerType //指针类型使用*后面跟其指向的类型名 *T声明指针 **T 声明多级指针 *T 出现在\u0026quot;=\u0026quot; 左边表示指针声明, 右边表示取指针指向的值 结构体指针访问结构体字段仍然使用\u0026quot;.\u0026quot;点操作符,Go语言没有\u0026quot;-\u0026gt;\u0026quot;操作符 Go不支持指针的运算 函数中允许返回局部变量的地址  2.数组 [n]elementType //数组类型使用[n]后面跟数据元素类型来表示 var arr [2]int 数组初始化: a := [3]int{1,2,3} a := [...]int{1,2,3} a := [3]int{1:1, 2:3} // 指定总长度,并通过索引值进行初始化,没有初始化元素时使用类型默认值 a := [...]int{1:1, 2:3} //不指定总长度,通过索引值进行初始化,数组长度由最后一个索引值确定，没有指定索引的元素被初始化为类型的零值 数组的特点: 1. 数组创建完长度就固定了,不可以再追加元素 2. 数组是值类型的,数组复制或作为函数参数都是值拷贝 数组相关操作: 1. 数组元素的访问 b := a[0] for i, v := range a { } 2. 数据的长度 len()  3.切片 Go 为切片维护三个元素一一指向底层数组的指针、切片的元素数量和底层数组的容量 []elementType //切片类型使用[]后面跟切片元素类型来表示 切片的相关操作 1. 切片的创建 var array = [...]int{0,1,2,3,4,5,6,7} s1 := array[0:4] a := make([]int, 10) 或 a := make([]int, 10, 15) 2.切片支持的操作 内置函数len()返回切片长度 内置函数cap()返回切片底层数组容量 内置函数append()对切片追加元素 内置函数copy()用于复制一个切片 3.字符串和切片的相互转换 str := \u0026quot;hello,世界\u0026quot; a := []byte(str) // 将字符串转换为[]byte类型切片 b := []rune(str) // 将字符串转换为[]rune类型切片  4.字典 Go语言内置的字典类型叫map.map的类型格式是: map[K]T, 其中K可以是任意可进行比较的类型,T是值类型. map[keyType]valueType //map类型使用map[键类型]值类型来表示 字典的相关操作 1.map的创建 ma :=map[string]int{\u0026quot;a\u0026quot;:1, \u0026quot;b\u0026quot;:2} make(map[K]T) 或者 make(map[K]T, len) 2.map支持的操作 map的单个键值访问方式是: mapName[key] 可以使用range遍历一个map类型变量,但是不保证每次迭代元素的顺序 for k, v := range mp { fmt.Println(\u0026quot;key=\u0026quot;, k, \u0026quot;value=\u0026quot;, v) } 删除map中的某个键值,使用如下语法:delete(mapName, key) 可以使用内置的len()函数返回map中的键值对数量 注意: Go内置的map不是并发安全的,并发安全的map可以使用标准包sync中的map。 不要直接修改map value内某个元素的值, 如果想修改map的某个键值,则必须整体复制。 type User struct { name string age int } ma := make(map[int]User) andes := User{ name: \u0026quot;andes\u0026quot;, age: 18, } ma[1] = andes ma[1].age = 19 //Error 不能通过map引用直接修改andes.age=19 andes.age = 19 ma[1] = andes //必须整体替换value  5.通道 chan valueType //通道使用chan后面跟通道元素类型来表示  6.结构和接口  struct { feildType feildType feildType feildType ... } // 结构类型使用struct{} 将各个结构字段扩起来表示 struct类型字面量 struct { FeildName FeildType FeildName FeildType FeildName FeildType } 自定义struct类型 type TypeName struct { FeildName FeildType FeildName FeildType FeildName FeildType } struct类型变量的初始化 type Persion struct { Name string Age int } type Student struct { *Persion Number int } // 按照类型声明顺序,逐个赋值 a := Persion{\u0026quot;Tom\u0026quot;, 21} //不推荐这种初始化方式 // 推荐下面这种赋值方式 p := \u0026amp;Persion { Name: \u0026quot;tata\u0026quot;, Age: 12 } s := Strudent { Persion: p, Number: 110, } "});index.add({'id':29,'href':'/docs/go/%E5%B7%A5%E5%85%B7%E9%93%BE%E7%AF%87/','title':"工具链篇",'content':"Collapsed Level of Menu Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':30,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/','title':"控制结构",'content':"控制结构 1.if语句 if err, file := os.Open(\u0026quot;xxx\u0026quot;); err == nil { //do smoething } else { return nil, err } if score \u0026gt;= 90 { } else if score \u0026gt;= 80 { } else { }  2.switch语句 switch 语句会根据传入的参数检测并执行符合条件的分支. switch 的语法特点如下: switch 和 if 语句一样, switch后面可以带一个可选的简单的初始化语句 switch 后面的表达式也是可选的, 如果没有表达式, 则case子句是一个布尔表达式. 而不是一个值, 此时就相当于多重if else语句 switch 条件表达式的值不像c语言那样必须限制为整数, 可以是任意支持相等比较运算的类型变量 通过fallthough语句来强制执行下一个case子句(不再判断下一个case子句的条件是否满足) switch支持default语句, 当所有的case分支都不符合时,执行default语句,并且default语句可以放到任意位置,并不影响switch的逻辑判断 swith和.(type)结合可以进行类型的查询， （//todo::） switch i := \u0026quot;y\u0026quot;; i { //switch后面可以带上一个初始化语句 case \u0026quot;y\u0026quot;, \u0026quot;Y\u0026quot;: //多个case值使用逗号分隔 fmt.Println(\u0026quot;yes\u0026quot;) fallthrough //fallthrough会跳过接下来的case条件， // 直接执行下一个case语句 case \u0026quot;n\u0026quot;, \u0026quot;N\u0026quot;: fmt.Println(\u0026quot;no\u0026quot;) } switch { case score \u0026gt;= 90: grade = \u0026quot;A\u0026quot; case score \u0026gt;= 80: grade = \u0026quot;B\u0026quot; default: grade = \u0026quot;F\u0026quot; }  3.for语句 Go 语言仅支持一种循环语句,即for语句 for init; condition; post {} //类似c里面的for循环语句 for condition {} // 类似c里面的while循环语句 for {} // 类似c里面的while(1)死循环语句 // 访问map for key, value := range map {} for key := range map{} // 访问数据 for index, value := range array {} for index := range array {} for _, value := range array{} // 访问切片 for index, value := range slice {} for index := range slice {} for _, value := range slice{} // 访问通道 for value := range channel {}  4.标签和跳转 Go 语言使用标签(Lable)来标识一个语句的位置, 用于goto, break, continue语句的跳转， 标签的语法是: Lable: Statement 标签的具体作用和使用见下面的goto、break、continue goto goto 语句用于函数的内部的跳转，需要配合标签一起使用，具体的格式如下： goto Lable //goto Lable 的语义是跳转到标签名后的语句处执行， goto语句有以下几个特点: goto 语句只能在函数内跳转。 goto 语句不能跳过内部变量声明语句，这些变量在goto语句 的标签语句处又是可见的。 例如: goto L //BAD, 跳过了v := 3这条语句是不允许的 v := 3 L: goto语句只能跳到同级作用域或者上层作用域内，不能跳到内部作用域内。 例如 ： if n%2 == 1 { goto L1 } for n \u0026gt; 0 { f() n-- L1: f() n-- } break break 用于函数内跳出 for、 switch、 select 语句的执行，有两种使用格式： 单独使用，用于跳出 break 当前所在的 for、 switch、 select 语句的执行。 和标签一起使用，用于跳出标签所标识的 for、 switch、 select 语句的执行，可用于跳出多重循环，但标签和 break 必须在同一个函数内。 例如： L1: for i := 0; ; i++ { for j := 0; ; j++ { if i \u0026gt;= 5 { break L1 // 跳出L1标签所在的for循环 } if j \u0026gt; 10 { break // 默认仅跳出离break最近的内层循环 } } } continue continue 用于跳出 for 循环的本次选代，跳到 for 循环的下一次选代的 post 语句处执行，也有两种使用格式: 单独使用，用于跳出 continue 当前所在的 for 循环的本次迭代 。 和标签一起使用，用于跳出标签所标识的 for 语句的本次选代，但标签和 continue 必须 在同一个函数内。 例如 ： L1: for i := 0; ; i++ { for j := 0; ; j++ { if i \u0026gt;= 5 { continue L1 // 跳出L1标签所在处的for循环 } if j \u0026gt; 10 { continue // 继续下次循环 } } }  5.return和函数调用 re阳m i吾句也能引 发控制流程的跳转，用于函数和方法的退出。 函数和方法的调用也能引 发程序控制流的跳转，这些在后续章节中会详细介绍。 "});index.add({'id':31,'href':'/docs/shell/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/','title':"环境变量配置文件",'content':"shell基础 Buttons are styled links that can lead to local page or external link.\nExample {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}}  Get Home  Contribute  "});index.add({'id':32,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E6%A0%87%E8%AF%86%E7%AC%A6/%E7%A9%BA%E7%99%BD%E6%A0%87%E8%AF%86%E7%AC%A61%E4%B8%AA/','title':"空白标识符(1个)",'content':"空白标识符(1个) _ // 空白标识符有特殊的含义, 用来声明一个匿名的变量,该变量在赋值表达式的左端,空白标识符引用通常被用作占位\n"});index.add({'id':33,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E6%A0%87%E8%AF%86%E7%AC%A6/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B015%E4%B8%AA/','title':"内置函数(15个)",'content':"内置函数(15个) make new len cap append copy delete panic recover close complex real image Print Printin\n"});index.add({'id':34,'href':'/docs/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/%E5%B8%AE%E5%8A%A9%E5%91%BD%E4%BB%A4/','title':"帮助命令",'content':"帮助命令 帮助命令man man 命令 man的级别 1: 查看命令帮助 2: 查看可被内核调用的函数的帮助 3: 查看函数和函数库的帮助 4: 查看特殊文件的帮助(主要是/dev目录下的文件) 5: 查看配置文件的帮助 6: 查看游戏的帮助 7: 查看其他杂项的帮助 8: 查看系统管理员可用命令的帮助 9: 查看和内核相关文件的帮助 查看命令拥有哪个级别的帮助 man -f 命令 或者 whatis 命令 举例: man -5 passwd man -4 null man -8 ifconfig 查看和命令相关的所有帮助 man -k 命令 或者 apropos 命令 举例: man -k passwd  其他帮助命令 * 选项帮助: 命令 --help #获取命令选项的帮助 例如: ls --help * shell内部命令帮助 help shell内部命令 #获取shell内部命令的帮助 例如: whereis cd #确定是否是shell内部命令 只要找不到执行文件都是内部命令 help cd #获取内部命令帮助 * 详细命令帮助info - 回车: 进入子帮助页面(带有*号标记) - u: 进入上层页面 - n: 进入下一个帮助小节 - p: 进入上一个帮助小节 - q: 退出  "});index.add({'id':35,'href':'/docs/shell/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/','title':"正则表达式",'content':"shell基础 Buttons are styled links that can lead to local page or external link.\nExample {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}}  Get Home  Contribute  "});index.add({'id':36,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E6%A0%87%E8%AF%86%E7%AC%A6/%E6%93%8D%E4%BD%9C%E7%AC%A6%E5%92%8C%E5%88%86%E9%9A%94%E7%AC%A647%E4%B8%AA/','title':"操作符和分隔符(47个)",'content':"操作符和分隔符(47个) 算术运算符(5个) ＋ － ＊ ／ %  位运算符(6个) \u0026amp; | \u0026lt; \u0026amp;^ \u0026gt;\u0026gt; \u0026lt;\u0026lt;  赋值和赋值复核运算符(13个) :＝ ＝ += -= *= /= %= \u0026amp;= |= ^= \u0026amp;^= \u0026gt;\u0026gt;= \u0026lt;\u0026lt;=  比较运算符(6个) \u0026gt; \u0026gt;= \u0026lt; \u0026lt;= == !=  括号(6个) () {} []  逻辑运算符(3个) \u0026amp;\u0026amp; || !  自增自减操作符(2个) ++ -- //go语言里面自增、自减操作符是语句而不是表达式  其他运算符(6个) : , ; . ... \u0026lt;-  "});index.add({'id':37,'href':'/docs/shell/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/','title':"流量控制语句",'content':"shell基础 Buttons are styled links that can lead to local page or external link.\nExample {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}}  Get Home  Contribute  "});index.add({'id':38,'href':'/docs/go/%E5%9F%BA%E7%A1%80%E7%AF%87/%E5%87%BD%E6%95%B0/','title':"函数",'content':"函数  函数是一种类型,函数类型变量可以像其他类型变量一样使用,可以作为其他函数的参数或返回值,也可以直接调用执行。 函数支持多值返回 支持闭包 函数支持可变参数  基本概念 函数定义 func funcName(param-list) (result-list) { function-body }  函数的特点 1、函数可以没有输入, 也可以没有返回值(默认返回0) 2、多个相邻的相同类型的参数可以使用简写模式: func add(a, b int) int { //a int, b int 简写为 a,b int return a + b } 3、支持有名的返回值,参数名就相当于函数体内最外层的局部变量，命名返回值变量会被初始化为类型零值， 最后的return可以不带参数名直接返回 func add(a, b int) (sum int) { sum = a + b return //return sum的简写模式 // sum := a + b // 如果是 sum:=a + b, 则相当于新声明一个sum变量命名返回变量sum覆盖 // return sum //最后需要显示的调用return sum } 4、不支持默认值参数 5、不支持函数重载 6、不支持函数嵌套，严格地说是不支持命名函数的嵌套定义，但支持嵌套匿名函数 func add(a, b int) (sum int) { anonymouse := function(x, y int) int { return x + y } return anonymouse(a, b) }  多值返回 func swap(a, b int) (int, int) { return b, a }  实参到形参的传递 package main import \u0026quot;fmt\u0026quot; func chvalue(a int) int { a = a + 1 return a } func chpointer(a *int) { *a = *a + 1 return } func main() { a := 10 chvalue(a) //实参传递给形参是值拷贝 fmt.Println(a) chpointer(\u0026amp;a) // 实参传递给形参仍然是值拷贝,只不过复制的是a的地址值 fmt.Println(a) }  不定参数 go 函数支持不定数目的形式参数, 不定参数声明使用param ...type的语法形式 函数的不定参数有如下几个特点: 1、所有的不定参数类型必须是相同的 2、不定参数必须是函数的最后一个参数 3、不定参数名在函数体内相当于切片，对切片的操作同同样适合对不定参数的操作: 例如: func sum(arr ...int) (sum int) { for _, v := range arr { //此时arr就相当于切片,可以使用range访问 sum += v } return } 4、切片可以作为参数传递给不定参数,切片名后要加上\u0026quot;...\u0026quot;。 例如: func sum(arr ...int) (sum int) { sum += v } func main() { slice := []int{1,2,3,4} array := [...]int{1,2,3,4} sum(slice...) } 5、形参不定参数的函数和形参为切片的函数类型不相同. 例如: func suma(arr ...int) (sum int) { for v := range arr { sum += v } return } func sumb(arr []int) (sum int) { for v := range arr { sum += v } return } // suma和sumb的类型并不一样 fmt.Printf(\u0026quot;%T\\n\u0026quot;, suma) //func(...int) fmt.Printf(\u0026quot;%T\\n\u0026quot;, sumb) //func([]int)  函数签名和匿名函数 函数签名 函数类型又叫函数签名,一个函数的类型就是函数定义首行去掉函数名,参数名和{, 可以使用fmt.Printf的%T 格式化参数打印函数的类型。 package main import \u0026quot;fmt\u0026quot; func add(a, b int) int { return a + b } func main() { fmt.Printf(\u0026quot;%T\\n\u0026quot;, add) // func(int, int) int } 两个函数类型相同的条件是: 拥有相同的形参列表和返回值列表(列表元素的次序、个数和类型都相同), 形参名可以不同。 以下2个函数的参数类型完全一样. func add(a, b int) int {return a + b} func sub(x int, y int) (c int) {c = x -y; return c} 可以使用type定义函数类型, 函数类型变量可以作为函数的参数或返回值. package main import \u0026quot;fmt\u0026quot; func add(a, b int) int { return a + b } func sub(a, b int) int { return a - b } type Op func(int, int) int // 定义一个函数类型,输入的是两个int类型,返回值是一个int类型 func do(f Op, a, b int) int { // 定义一个函数,第一个参数是函数类型Op return f(a, b)\t//函数类型变量可以直接用来进行函数调用 } func main() { a := do(add, 1, 2) // 函数名add可以当做相同函数类型形象,不需要强制类型转换 fmt.Println(a) // 3 s := do(sub, 1, 3) fmt.Println(s) // -1 } 函数类型和map, slice, chan一样, 实际函数类型变量和函数名都可以当做指针变量,该指针执行函数代码的 开始位置. 通常说函数类型变量是一种引用类型，未初始化的函数类型的变量默认值是nil Go中函数是\u0026quot;第一公民\u0026quot;, 有名函数的函数名可以看做函数类型的常量，可以直接使用函数名调用函数，也可以直接 赋值给函数类型变量, 后续通过该变量来调用该函数. package main func sum(a, b int) int { return a + b } func main() { sum(3, 4) // 直接调用 f := sum //有名函数可以直接赋值给变量 f(1, 3) }  匿名函数 package main import \u0026quot;fmt\u0026quot; // 匿名函数被直接复制函数变量 var sum = func(a, b int) int { return a + b } func doinput(f func(int, int) int, a, b int) int { return f(a, b) } // 匿名函数作为返回值 func wrap(op string) func(int, int) int { switch op { case \u0026quot;add\u0026quot;: return func(a, b int) int { return a + b } case \u0026quot;sub\u0026quot;: return func(a int, b int) int { return a - b } default: return nil } } func main() { defer func() { if err := recover(); err != nil { fmt.Println(err) } }() sum(1, 2) // 匿名函数作为实参 doinput(func(x int, y int) int { return x + y }, 1, 2) opFunc := wrap(\u0026quot;add\u0026quot;) re := opFunc(2, 3) fmt.Printf(\u0026quot;%d\\n\u0026quot;, re) }  defer defer关键字, 可以注册多个延迟调用 package main func main() { // 先进后出 defer func() { println(\u0026quot;firts\u0026quot;) }() defer func() { println(\u0026quot;second\u0026quot;) }() println(\u0026quot;function body\u0026quot;) } defer后面必须是函数或方法, 不能是语句。 defer函数的实参在注册时通过值拷贝传递进去. 主动调用os.Exit(int)退出进程时,defer将不再被执行(即使defer已经提前注册) package main import \u0026quot;os\u0026quot; func main() { defer func() { println(\u0026quot;defer\u0026quot;) //这种情况 不执行 }() println(\u0026quot;func body\u0026quot;) os.Exit(1) } defer的好处是可以在一定程度上避免资源泄露, 特定是在有很多return语句, 有多个资源需要关闭的场景中，很 容易漏掉资源的关闭操作. defer语句的位置不当, 有可能导致panic, 一般defer语句放在错误检查语句之后 defer也有明显的副作用; defer会推迟资源的释放，defer尽量不要放到循环语句里面, 将大函数内部的defer 语句单独拆分成一个小函数是一种很好的实践方式. 另外，defer相当于普通的函数调用需要间接的数据结构的支持。 相对于普通函数调用有一定的性能耗损。 defer中最好不要对有名返回值参数进行操作，否则会引发匪夷所思的结果  闭包 闭包是由函数及其相关引用环境组合而成的实体, 一般通过在匿名函数中引用外部函数的局部变量或包全局变量构成。 闭包 = 函数 + 引用环境 闭包对闭包外的环境引入是直接引用,编译器检测到闭包，会将闭包引用的外部变量分配到堆上。 如果函数返回的闭包引用了该函数的局部变量(参数或函数内部变量) (1) 多次调用该函数，返回的多个闭包所引用的外部变量是多个副本，原因是每个调用函数都会为局部变量分配内存。 (2) 用一个闭包函数多次, 如果该闭包修改了其引用的外部变量。则每一次调用该闭包对该外部变量都有影响，因为闭包函数共享外部引用。 package main func fa(a int) func(i int) int { return func(i int) int { println(\u0026amp;a, a) a = a + i return a } } func main() { f := fa(1) // f引用的外部的闭包环境包括本次函数调用的形参a的值1 g := fa(1) //g引用的外部的闭包环境包括本次函数调用的形参a的值1 println(f(1)) //多次调用f引用的是同一个副本a println(f(1)) // g中a的值仍然是1 println(g(1)) println(g(1)) } f和g引用的是不同的a 如果一个函数调用返回的闭包引用修改了全局变量,则每次调用都会影响全局变量。 如果函数返回的闭包引用的是全局变量a, 则多次调用该函数返回的多个闭包引用的都是同一个a。同理,调用一个闭包 多次引用的也是同一个a。此时如果闭包中修改了a值的逻辑,则每次闭包调用都会影响全局变量a的值。 使用闭包是为了减少全局变量,所以闭包引用全局变量不是好的编程方式。  "});index.add({'id':39,'href':'/docs/example/table-of-contents/','title':"Table of Contents",'content':"Ubi loqui Mentem genus facietque salire tempus bracchia Lorem markdownum partu paterno Achillem. Habent amne generosi aderant ad pellem nec erat sustinet merces columque haec et, dixit minus nutrit accipiam subibis subdidit. Temeraria servatum agros qui sed fulva facta. Primum ultima, dedit, suo quisque linguae medentes fixo: tum petis.\nRapit vocant si hunc siste adspice Ora precari Patraeque Neptunia, dixit Danae Cithaeron armaque maxima in nati Coniugis templis fluidove. Effugit usus nec ingreditur agmen ac manus conlato. Nullis vagis nequiquam vultibus aliquos altera suum venis teneas fretum. Armos remotis hoc sine ferrea iuncta quam!\nLocus fuit caecis Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp);  Placabilis coactis nega ingemuit ignoscat nimia non Frontis turba. Oculi gravis est Delphice; inque praedaque sanguine manu non.\nif (ad_api) { zif += usb.tiffAvatarRate(subnet, digital_rt) + exploitDrive; gigaflops(2 - bluetooth, edi_asp_memory.gopher(queryCursor, laptop), panel_point_firmware); spyware_bash.statePopApplet = express_netbios_digital( insertion_troubleshooting.brouter(recordFolderUs), 65); } recursionCoreRay = -5; if (hub == non) { portBoxVirus = soundWeb(recursive_card(rwTechnologyLeopard), font_radcab, guidCmsScalable + reciprocalMatrixPim); left.bug = screenshot; } else { tooltipOpacity = raw_process_permalink(webcamFontUser, -1); executable_router += tape; } if (tft) { bandwidthWeb *= social_page; } else { regular += 611883; thumbnail /= system_lag_keyboard; }  Caesorum illa tu sentit micat vestes papyriferi Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"});index.add({'id':40,'href':'/docs/linux/','title':"Linux",'content':"Collapsed Level of Menu Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':41,'href':'/docs/nginx/','title':"Nginx",'content':"Collapsed Level of Menu Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':42,'href':'/docs/shell/','title':"Shell",'content':"Collapsed Level of Menu Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':43,'href':'/docs/example/collapsed/','title':"Collapsed",'content':"Collapsed Level of Menu Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\n Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  "});index.add({'id':44,'href':'/docs/example/collapsed/3rd-level/4th-level/','title':"4th Level",'content':"4th Level of Menu Caesorum illa tu sentit micat vestes papyriferi Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"});index.add({'id':45,'href':'/docs/example/collapsed/3rd-level/','title':"3rd Level",'content':"3rd Level of Menu Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp);  "});index.add({'id':46,'href':'/docs/example/hidden/','title':"Hidden",'content':"This page is hidden in menu Quondam non pater est dignior ille Eurotas Latent te facies Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\n Pater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor  Cum honorum Latona O fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer), pad.property_data_programming.sectorBrowserPpga(dataMask, 37, recycleRup)); intellectualVaporwareUser += -5 * 4; traceroute_key_upnp /= lag_optical(android.smb(thyristorTftp)); surge_host_golden = mca_compact_device(dual_dpi_opengl, 33, commerce_add_ppc); if (lun_ipv) { verticalExtranet(1, thumbnail_ttl, 3); bar_graphics_jpeg(chipset - sector_xmp_beta); }  Fronde cetera dextrae sequens pennis voce muneris Acta cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software; if (internic \u0026gt; disk) { emoticonLockCron += 37 + bps - 4; wan_ansi_honeypot.cardGigaflops = artificialStorageCgi; simplex -= downloadAccess; } var volumeHardeningAndroid = pixel + tftp + onProcessorUnmount; sector(memory(firewire + interlaced, wired)); "});index.add({'id':47,'href':'/docs/shortcodes/','title':"Shortcodes",'content':""});index.add({'id':48,'href':'/docs/shortcodes/buttons/','title':"Buttons",'content':"Buttons Buttons are styled links that can lead to local page or external link.\nExample {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}}  Get Home  Contribute  "});index.add({'id':49,'href':'/docs/shortcodes/columns/','title':"Columns",'content':"Columns Columns help organize shorter pieces of content horizontally for readability.\n{{\u0026lt; columns \u0026gt;}} \u0026lt;!-- begin columns block --\u0026gt; # Left Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic sparator, between columns --\u0026gt; # Mid Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic sparator, between columns --\u0026gt; # Right Content Lorem markdownum insigne... {{\u0026lt; /columns \u0026gt;}} Example Left Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.  Mid Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!  Right Content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.   "});index.add({'id':50,'href':'/docs/shortcodes/details/','title':"Details",'content':"Details Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.\nExample {{\u0026lt; details \u0026#34;Title\u0026#34; [open] \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} {{\u0026lt; details title=\u0026#34;Title\u0026#34; open=true \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} Title Markdown content Lorem markdownum insigne\u0026hellip;   "});index.add({'id':51,'href':'/docs/shortcodes/expand/','title':"Expand",'content':"Expand Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.\nExample Default {{\u0026lt; expand \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}}   Expand ↕  Markdown content Lorem markdownum insigne\u0026hellip;    With Custom Label {{\u0026lt; expand \u0026#34;Custom Label\u0026#34; \u0026#34;...\u0026#34; \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}}   Custom Label ...  Markdown content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.    "});index.add({'id':52,'href':'/docs/shortcodes/hints/','title':"Hints",'content':"Hints Hint shortcode can be used as hint/alerts/notification block.\nThere are 3 colors to choose: info, warning and danger.\n{{\u0026lt; hint [info|warning|danger] \u0026gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{\u0026lt; /hint \u0026gt;}} Example Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa  "});index.add({'id':53,'href':'/docs/shortcodes/katex/','title':"Katex",'content':"KaTeX KaTeX shortcode let you render math typesetting in markdown document. See KaTeX\nExample {{\u0026lt; katex [display] [class=\u0026#34;text-center\u0026#34;] \u0026gt;}} f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi {{\u0026lt; /katex \u0026gt;}}     Display Mode Example Here is some inline example:  \\(\\pi(x)\\)  , rendered in the same line. And below is display example, having display: block  \\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\\]  Text continues here.\n"});index.add({'id':54,'href':'/docs/shortcodes/mermaid/','title':"Mermaid",'content':"Mermaid Chart Mermaid is library for generating svg charts and diagrams from text.\nExample {{\u0026lt; mermaid [class=\u0026#34;text-center\u0026#34;]\u0026gt;}} sequenceDiagram Alice-\u0026gt;\u0026gt;Bob: Hello Bob, how are you? alt is sick Bob-\u0026gt;\u0026gt;Alice: Not so good :( else is well Bob-\u0026gt;\u0026gt;Alice: Feeling fresh like a daisy end opt Extra response Bob-\u0026gt;\u0026gt;Alice: Thanks for asking end {{\u0026lt; /mermaid \u0026gt;}}     "});index.add({'id':55,'href':'/docs/shortcodes/tabs/','title':"Tabs",'content':"Tabs Tabs let you organize content by context, for example installation instructions for each supported platform.\n{{\u0026lt; tabs \u0026#34;uniqueid\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026#34;MacOS\u0026#34; \u0026gt;}} # MacOS Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Linux\u0026#34; \u0026gt;}} # Linux Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Windows\u0026#34; \u0026gt;}} # Windows Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; /tabs \u0026gt;}} Example MacOS MacOS This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nLinux Linux This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nWindows Windows This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n "});index.add({'id':56,'href':'/posts/','title':"Posts",'content':""});index.add({'id':57,'href':'/docs/','title':"Docs",'content':""});})();